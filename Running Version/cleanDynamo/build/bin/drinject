#!/bin/sh

# **********************************************************
# Copyright (c) 2002-2008 VMware, Inc.  All rights reserved.
# **********************************************************

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# 
# * Neither the name of VMware, Inc. nor the names of its contributors may be
#   used to endorse or promote products derived from this software without
#   specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL VMWARE, INC. OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
# DAMAGE.

# Copyright (c) 2001-2002 Massachusetts Institute of Technology
# Copyright (c) 2001-2002 Hewlett-Packard Company

###########################################################################
##
## DynamoRIO drinject script for Linux
## 
## usage: drinject [-v] [-debug] [-dr_home <path>] [-ops <dr_options>]
##                 [-logdir <path>] -client <path> <executable> [args ...]
##
##  [-v]                   Verbose output
##  [-debug]               Use debug build of DynamoRIO (release is default)
##  [-64]                  Use 64-bit DynamoRIO (default is 32-bit).  This
##                           should match what the client library and executable
##                           being run were compiled for.
##  [-dr_home <path>]      Path to the DynamoRIO install.
##                           Defaults to .. from drinject; may also be omitted
##                           if DYNAMORIO_HOME is defined in the environment.
##  [-ops <dr_options>]    DynamoRIO options (such as -stderr_mask 0xc
##                           or -opt_memory: see docs). Can also be specified
##                           with DYNAMORIO_OPTIONS in the environment.
##  [-logdir <path>]       Path to logging directory.  Defaults to ../logs from
##                           drinject; may also be omitted if DYNAMORIO_LOGDIR
##                           is defined in the environment.
##  [-client <path> <ID> "<options>"]
##                         Register one or more clients to run alongside DR.
##                           This option is only valid when registering a
##                           process.  The -client option takes three arguments:
##                           the full path to a client library, a unique 8-digit
##                           hex ID, and an optional list of client options
##                           (use "" to specify no options).  Multiple clients
##                           can be installed via multiple -client options.  In
##                           this case, clients specified first on the command
##                           line have higher priority.  Neither the path nor
##                           the options may contain semicolon characters.
##  <executable> [args...] The executable to run under DynamoRIO (and the args
##                           to pass to it if running now).

lib=release
arch=32
# drconfig: config=1, runapp=0
# drrun: config=1, runapp=1
# drinject: config=0, runapp=1
config=0
runapp=1

usage="usage: $0 [-v] [-debug] [-32] [-64] [-dr_home <path>] [-ops <dr_options>] [-logdir <path>] [-client <path> <ID> \"<options>\"]* <executable> [args ...]"

default_home_rel="`dirname $0`/.."
default_home=`cd $default_home_rel ; pwd`
client_list=""

if [ "$1" = "" ] || [ "$1" = "-h" ] || [ "$1" = "-help" ] || [ "$1" = "--help" ]
then
    echo $usage
    echo
    # sed would be more precise but may not be available
    head -n 69 $0 | tail -n 34
    exit
fi

# Read options
while [ "$1" = "-v" ] || [ "$1" = "-debug" ] || [ "$1" = "-dr_home" ] || \
      [ "$1" = "-ops" ] || [ "$1" = "-logdir" ] || [ "$1" = "-client" ] || \
      [ "$1" = "-32" ] || [ "$1" = "-64" ]
do

if [ "$1" = "-v" ] 
then
    verbose=yes
    shift
fi

if [ "$1" = "-debug" ]
then
    lib=debug
    shift
fi

if [ "$1" = "-32" ]
then
    arch=32
    shift
fi

if [ "$1" = "-64" ]
then
    arch=64
    shift
fi

if [ "$1" = "-dr_home" ]
then
    shift
    DYNAMORIO_HOME="$1"
    shift
fi

if [ "$1" = "-ops" ]
then
    shift
    specified_ops=yes
    ops=$1
    shift
fi

if [ "$1" = "-logdir" ]
then
    shift
    logdir=$1
    shift
fi

if [ "$1" = "-client" ]
then
    shift
    client="$1"
    shift
    client_id="$1"
    shift
    client_ops="$1"
    shift
    # setup client
    if [ ! -n "$client" ] || [ ! -n "$client_id" ]
    then
        echo "ERROR - client not fully specified"
        echo $usage
        exit
    fi
    if [ ! -e $client ]
    then
        echo "ERROR - client lib $client not found"
        echo $usage
        exit
    fi
    # convert to absolute path
    client=`cd \`dirname $client\` ; pwd`/`basename $client`
    # add to list now in case multiple
    if [ -n "$client_list" ]
    then
        client_list="${client_list};${client};${client_id};${client_ops}"
    else
        client_list="${client};${client_id};${client_ops}"
    fi
fi

done

# Setup lib path
if [ ! -n "$dr_lib_path" ]
then
    if [ -n "$DYNAMORIO_HOME" ]
    then
        dr_lib_path=$DYNAMORIO_HOME/lib$arch
    else
        dr_lib_path=$default_home/lib$arch
    fi
fi
if [ ! -e "$dr_lib_path/$lib/libdynamorio.so" ]
then
    # Support running from build dir
    if [ -n "$DYNAMORIO_HOME" ]
    then
        dr_lib_build_path=$DYNAMORIO_HOME/lib
    else
        dr_lib_build_path=$default_home/lib
    fi
    if [ -e "$dr_lib_build_path/libdynamorio.so" ]
    then
        lib=""
        dr_lib_path=$dr_lib_build_path
    else
        echo "ERROR - libdynamorio.so not found in $dr_lib_path/$lib"
        echo $usage
        exit
    fi
fi
# convert to absolute path
dr_lib_path=`cd "$dr_lib_path" ; pwd`

if [ ! -n "$*" ]
then
    echo "ERROR - no application specified"
    echo $usage
    exit
fi

# setup logdir
if [ ! -n "$logdir" ]
then
    if [ -n "$DYNAMORIO_LOGDIR" ]
    then
        logdir=$DYNAMORIO_LOGDIR
    else
        logdir=$default_home/logs
    fi
fi
if [ ! -d $logdir ]
then
    echo "ERROR - logdir $logdir not found"
    echo $usage
    exit
fi
# convert to absolute path and export
export DYNAMORIO_LOGDIR=`cd $logdir ; pwd`

# client options
if [ -n "$client_list" ]
then
    client_op_string="-code_api -client_lib \"$client_list\""
else
    client_op_string=""
fi

# setup options
if [ "$specified_ops" = "yes" ]
then
    export DYNAMORIO_OPTIONS="${client_op_string} $ops"
else
    export DYNAMORIO_OPTIONS="${client_op_string} $DYNAMORIO_OPTIONS"
fi

# i#85/PR 212034: we now use config files

if [ ! -n "$HOME" ]
then
    echo "ERROR - $HOME must exist"
    echo $usage
    exit
fi
cfgdir="$HOME/.dynamorio"
if [ ! -d $cfgdir ]
then
    mkdir -p "$cfgdir"
fi

app="$1"
shift
# better to require bash and use ${app##*/}?
name=`basename $app`

if [ "$config" = "1" ]
then
    if [ "$runapp" = "1" ]
    then
        cfgfile="$cfgdir/$name.$$.1config$arch"
        echo "# one-time config file" > $cfgfile
        if [ "$verbose" = "yes" ]
        then
            echo "Using $lib DynamoRIO ($dr_lib_path/$lib/libdynamorio.so)"
            echo "With DynamoRIO options=\"$DYNAMORIO_OPTIONS\""
            echo "Using logging directory=\"$DYNAMORIO_LOGDIR\""
            echo "Running \"$app $*\""
        fi
    else
        cfgfile="$cfgdir/$name.config$arch"
        echo "# DynamoRIO config file" > $cfgfile
    fi
    echo "DYNAMORIO_RUNUNDER=1" >> $cfgfile
    echo "DYNAMORIO_OPTIONS=$DYNAMORIO_OPTIONS" >> $cfgfile
    echo "DYNAMORIO_LOGDIR=$DYNAMORIO_LOGDIR" >> $cfgfile
    echo "DYNAMORIO_AUTOINJECT=$dr_lib_path/$lib/libdynamorio.so" >> $cfgfile
    echo "DYNAMORIO_HOME=$dr_lib_path" >> $cfgfile
fi

if [ "$runapp" = "1" ]
then
    export LD_LIBRARY_PATH=$dr_lib_path/$lib:$LD_LIBRARY_PATH
    export LD_PRELOAD="libdynamorio.so libdrpreload.so"
    
    # keep same pid for easier scripting
    exec $app $*
else
    if [ "$verbose" = "yes" ]
    then
        echo "Wrote config file $cfgfile"
        exit 0
    fi
fi
exit 1
